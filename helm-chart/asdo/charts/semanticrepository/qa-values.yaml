# Default values for enabler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# String to partially override enabler.fullname template (will maintain the release name)
nameOverride: ""
# String to fully override enabler.fullname template
fullnameOverride: ""
# Deploy all the components in the same node
enablerNodeSelector: {}

# Component backend values
backend:
  tier: external
  image:
    repository: gitlab.assist-iot.eu:5050/wp4/data-mgmt/semantic-repository
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 80
    targetPort: 8080
    containerPort: 8080
    protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    restHost: '0.0.0.0'
    restPort: '8080'

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component mongodb values
mongodb:
  tier: internal
  image:
    repository: docker.io/bitnami/mongodb
    pullPolicy: IfNotPresent
    tag: "6.0"

  replicaCount: 1
  service:
    type: ClusterIP
    nodePort: ""
    port: 27017
    targetPort: 27017
    containerPort: 27017
    protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    mongoUser: semrepo
    mongoPassword: nobodyExpectsTheSpanishPassword
    mongoReplicaSet: replicaset

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 1Gi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component minio values
minio:
  tier: internal
  image:
    repository: minio/minio
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 9000
    targetPort: 9000
    containerPort: 9000
    protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    minioUser: semrepo
    minioPassword: k8sIsNotFun

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 5Gi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

