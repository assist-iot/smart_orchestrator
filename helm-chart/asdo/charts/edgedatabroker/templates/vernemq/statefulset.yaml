apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vernemq.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "vernemq.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "vernemq.fullname" . }}-headless
  {{- if not .Values.vernemq.autoscaling.enabled }}
  replicas: {{ .Values.vernemq.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vernemq.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "vernemq.labels" . | nindent 8 }}
    spec:
      {{- with .Values.vernemq.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.enablerNodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not .Values.enablerNodeSelector }}
        {{- with .Values.vernemq.nodeSelector }}
      nodeSelector:
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.vernemq.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.vernemq.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.vernemq.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "vernemq.fullname" . }}
      containers:
        - name: vernemq
          securityContext:
            {{- toYaml .Values.vernemq.securityContext | nindent 12 }}
          image: "{{ .Values.vernemq.image.repository }}:{{ .Values.vernemq.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.vernemq.image.pullPolicy }}
          ports:
            - name: mqtt
              containerPort: {{ .Values.vernemq.service.ports.mqtt.containerPort }}
              protocol: {{ .Values.vernemq.service.ports.mqtt.protocol }}
            - name: mqtts
              containerPort: {{ .Values.vernemq.service.ports.mqtts.containerPort }}
              protocol: {{ .Values.vernemq.service.ports.mqtts.protocol }}
            - name: ws
              containerPort: {{ .Values.vernemq.service.ports.ws.containerPort }}
              protocol: {{ .Values.vernemq.service.ports.ws.protocol }}
            - name: wss
              containerPort: {{ .Values.vernemq.service.ports.wss.containerPort }}
              protocol: {{ .Values.vernemq.service.ports.wss.protocol }}
            - name: prometheus
              containerPort: {{ .Values.vernemq.service.ports.prometheus.containerPort }}
              protocol: {{ .Values.vernemq.service.ports.prometheus.protocol }}
          resources:
            {{- toYaml .Values.vernemq.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.vernemq.envVars }}
            - name: {{ $key }}
              value: {{ $value | quote}}
          {{- end }}
            # - name: MY_POD_NAME
            #   valueFrom:
            #     fieldRef:
            #         fieldPath: metadata.name
            # - name: DOCKER_VERNEMQ_KUBERNETES_LABEL_SELECTOR
            #   value: "app.kubernetes.io/instance={{ .Release.Name }}"
          volumeMounts:
            {{- if .Values.vernemq.persistence.enabled }}
            - name: data
              mountPath: /path/in/container
            {{- end }}

            - name: logs
              mountPath: /vernemq/log
            - name: data
              mountPath: /vernemq/data
            {{- range .Values.vernemq.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              readOnly: true
            {{- end }}
            {{- if .Values.vernemq.certificates }}
            - name: listener-certificates
              mountPath: /etc/ssl/vernemq
            {{- end }}

      volumes:

        - name: logs
          emptyDir: {}
        {{- range .Values.vernemq.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- if .Values.vernemq.certificates }}
        - name: listener-certificates
          secret:
            secretName: {{ include "vernemq.fullname" . }}-certs
        {{- end }}

  {{- if and .Values.vernemq.persistence.enabled .Values.vernemq.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ tpl .Values.vernemq.persistence.existingClaim $ }}
  {{- else if not .Values.vernemq.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        {{- range .Values.vernemq.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.vernemq.persistence.size | quote }}
  {{- end }}
